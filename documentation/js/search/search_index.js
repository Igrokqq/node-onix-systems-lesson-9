var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.019,1,1.846]],["body/classes/AllExceptionsFilter.html",[0,0.018,1,2.422,2,1.019,3,0.317,4,0.269,5,0.269,6,3.216,7,2.321,8,3.216,9,4.483,10,0.317,11,1.276,12,4.84,13,3.907,14,4.483,15,4.483,16,4.84,17,0.541,18,2.819,19,1.389,20,0.039,21,1.127,22,0.606,23,1.389,24,3.907,25,0.921,26,0.511,27,3.907,28,2.819,29,0.751,30,2.819,31,2.321,32,0.317,33,3.691,34,2.819,35,2.819,36,3.907,37,2.819,38,4.483,39,2.819,40,2.819,41,2.819,42,2.819,43,1.562,44,2.819,45,2.819,46,2.819,47,2.819,48,2.819,49,2.819,50,0.018,51,0.025,52,0.018]],["title/controllers/AppController.html",[53,1.319,54,2.105]],["body/controllers/AppController.html",[0,0.022,3,0.398,4,0.337,5,0.337,10,0.398,11,1.486,17,0.68,20,0.039,25,1.156,26,0.595,29,0.943,32,0.398,43,1.415,50,0.023,51,0.029,52,0.023,53,2.015,54,3.214,55,1.744,56,2.913,57,4.365,58,1.415,59,3.539,60,2.015,61,3.115,62,3.539,63,2.501,64,1.744,65,3.539]],["title/modules/AppModule.html",[66,1.319,67,1.846]],["body/modules/AppModule.html",[0,0.019,3,0.352,4,0.298,5,0.298,20,0.039,26,0.689,29,0.832,32,0.352,50,0.02,51,0.027,52,0.02,66,2.095,67,3.49,68,1.539,69,1.539,70,1.936,71,1.936,72,1.539,73,1.936,74,1.936,75,2.572,76,2.572,77,2.985,78,2.985,79,2.597,80,1.936,81,1.936,82,3.124,83,2.961,84,1.719,85,3.124,86,2.208,87,1.539,88,3.124,89,3.124,90,3.124]],["title/injectables/AppService.html",[61,1.846,91,1.319]],["body/injectables/AppService.html",[0,0.023,3,0.423,4,0.358,5,0.358,10,0.423,11,1.544,17,0.722,20,0.038,25,1.228,26,0.492,29,1.001,32,0.423,43,1.503,50,0.024,51,0.031,52,0.024,57,4.463,60,2.094,61,2.929,91,2.094,92,2.33,93,3.094,94,3.759,95,3.759,96,3.759]],["title/classes/BookDto.html",[0,0.019,97,1.639]],["body/classes/BookDto.html",[0,0.027,2,0.962,3,0.3,4,0.254,5,0.254,10,0.3,17,0.906,20,0.038,22,1.111,26,0.568,32,0.3,50,0.017,51,0.024,52,0.017,58,1.887,60,2.092,64,2.808,97,2.066,98,2.191,99,1.849,100,3.072,101,3.578,102,3.578,103,3.578,104,3.752,105,2.661,106,2.652,107,2.661,108,2.661,109,2.598,110,2.661,111,2.661,112,2.661,113,2.191,114,3.336,115,3.089,116,3.072,117,1.881,118,1.881,119,1.65,120,2.661,121,2.652,122,3.752]],["title/classes/BookEntity.html",[0,0.019,123,1.467]],["body/classes/BookEntity.html",[0,0.017,2,1.006,3,0.313,4,0.265,5,0.265,10,0.313,17,0.971,20,0.038,21,1.113,22,1.088,26,0.507,32,0.313,50,0.018,51,0.025,52,0.018,58,2.023,60,2.133,99,1.908,100,3.147,101,3.666,102,3.666,103,3.963,106,2.737,109,2.451,123,1.908,124,2.292,125,2.194,126,4.581,127,2.784,128,2.784,129,2.194,130,3.666,131,2.784,132,2.784,133,2.784,134,3.188,135,2.292,136,1.234,137,2.784,138,2.292,139,2.784]],["title/controllers/BooksController.html",[53,1.319,140,1.846]],["body/controllers/BooksController.html",[0,0.013,3,0.235,4,0.199,5,0.199,10,0.235,11,1.026,17,0.807,19,1.862,20,0.038,21,1.511,22,0.813,23,1.862,25,1.374,26,0.59,29,0.556,32,0.235,43,1.682,50,0.013,51,0.02,52,0.013,53,0.924,55,1.028,58,1.682,63,1.474,64,1.028,97,3.024,123,1.028,125,2.072,129,2.424,136,0.924,138,1.717,140,1.947,141,1.717,142,1.717,143,4.472,144,1.947,145,1.947,146,2.607,147,1.947,148,1.717,149,3.111,150,2.086,151,3.138,152,1.293,153,2.586,154,2.086,155,2.086,156,1.293,157,2.586,158,2.086,159,2.586,160,1.717,161,1.717,162,1.717,163,1.717,164,1.717,165,1.293,166,1.293,167,1.862,168,1.717,169,1.717,170,1.474,171,2.086,172,1.717,173,3.462,174,2.086,175,1.717,176,2.086,177,1.717,178,2.086,179,1.717,180,2.086]],["title/modules/BooksModule.html",[66,1.319,77,1.639]],["body/modules/BooksModule.html",[0,0.019,3,0.348,4,0.295,5,0.295,20,0.038,26,0.687,29,0.825,32,0.348,50,0.02,51,0.027,52,0.02,55,2.051,66,2.085,68,1.525,69,1.525,70,1.918,71,1.918,72,1.525,73,2.916,74,2.581,77,2.977,79,2.581,80,1.918,81,1.918,83,2.187,86,2.943,87,1.525,123,1.525,140,2.916,167,2.664,168,2.548,170,2.187,181,2.548,182,2.548,183,3.095,184,2.548,185,3.095,186,3.095,187,3.427]],["title/injectables/BooksService.html",[91,1.319,167,1.467]],["body/injectables/BooksService.html",[0,0.015,3,0.264,4,0.223,5,0.223,10,0.264,11,1.119,17,0.909,19,2.193,20,0.038,21,1.78,22,0.957,23,2.193,25,1.455,26,0.619,29,0.624,32,0.264,43,1.78,50,0.015,51,0.022,52,0.015,87,1.154,91,1.517,92,1.452,97,3.063,123,1.154,125,1.687,129,2.517,136,1.038,144,2.123,145,2.123,146,2.759,147,2.123,148,2.819,151,3.246,152,2.123,156,2.123,165,1.452,166,1.452,167,1.687,169,1.929,170,1.656,188,1.929,189,1.929,190,2.343,191,3.146,192,2.343,193,3.424,194,2.343,195,2.343,196,2.343,197,2.343,198,1.929,199,2.343,200,1.929,201,2.343,202,2.343,203,2.343,204,2.343]],["title/classes/Env.html",[0,0.019,84,1.639]],["body/classes/Env.html",[0,0.012,2,0.685,3,0.213,4,0.181,5,0.181,8,2.405,10,0.213,11,0.954,17,0.684,20,0.039,22,0.766,25,1.164,26,0.382,32,0.213,33,1.561,43,1.425,50,0.012,51,0.019,52,0.012,84,1.961,205,1.34,206,2.209,207,5.04,208,2.68,209,2.829,210,2.829,211,1.896,212,2.619,213,1.896,214,1.896,215,1.896,216,1.896,217,2.518,218,2.933,219,3.563,220,3.563,221,2.933,222,3.228,223,3.563,224,3.563,225,3.563,226,3.563,227,3.563,228,5.316,229,3.563,230,3.563,231,3.563,232,3.563,233,3.563,234,3.563,235,3.563,236,3.563,237,3.563,238,3.563,239,3.563,240,1.896,241,3.563,242,1.34,243,1.561]],["title/interfaces/IConfigInterface.html",[212,1.639,244,1.639]],["body/interfaces/IConfigInterface.html",[3,0.407,4,0.345,5,0.345,10,0.407,20,0.038,22,1.214,32,0.407,50,0.023,51,0.03,52,0.023,99,2.271,212,2.538,217,3.778,218,2.977,221,4.4,222,2.556,244,1.99,245,2.556,246,2.977,247,5.345,248,3.616,249,3.616]],["title/interfaces/IEnvInterface.html",[206,1.846,244,1.639]],["body/interfaces/IEnvInterface.html",[3,0.396,4,0.335,5,0.335,10,0.396,11,1.481,17,0.962,20,0.037,25,1.638,26,0.46,32,0.396,50,0.023,51,0.029,52,0.023,206,2.809,208,3.281,209,3.741,210,3.741,212,3.139,244,1.938,245,2.488,250,2.898,251,3.52,252,3.52,253,3.52,254,3.52]],["title/classes/Middleware.html",[0,0.019,255,2.105]],["body/classes/Middleware.html",[0,0.019,1,2.581,2,1.118,3,0.348,4,0.295,5,0.295,10,0.348,11,1.36,17,0.594,19,1.525,20,0.038,21,1.237,22,0.666,23,1.525,25,1.011,26,0.658,29,0.825,32,0.348,50,0.02,51,0.027,52,0.02,255,2.943,256,2.548,257,4.705,258,4.163,259,4.163,260,5.032,261,3.095,262,2.548,263,3.095,264,3.427,265,3.427,266,4.163,267,3.095,268,3.095,269,3.095,270,3.095,271,3.095,272,3.095,273,3.095,274,3.095,275,3.095,276,3.095,277,3.095,278,3.095,279,3.095,280,3.095,281,3.095,282,3.095]],["title/classes/PublishedDto.html",[0,0.019,109,1.639]],["body/classes/PublishedDto.html",[0,0.027,2,1.167,3,0.364,4,0.308,5,0.308,10,0.364,17,0.823,20,0.037,22,0.921,26,0.422,32,0.364,50,0.021,51,0.028,52,0.021,58,1.713,60,1.898,64,2.697,99,2.111,106,3.028,109,2.358,114,3.398,115,3.527,116,3.028,117,2.283,118,2.283,119,2.002,121,2.283,283,2.659,284,4.807,285,4.807,286,2.659,287,3.23,288,3.23,289,3.23,290,3.23,291,3.23,292,2.659,293,3.23,294,3.23]],["title/classes/UserDto.html",[0,0.019,295,1.639]],["body/classes/UserDto.html",[0,0.022,2,0.865,3,0.269,4,0.228,5,0.228,10,0.269,17,0.957,20,0.038,22,1.072,26,0.313,32,0.269,50,0.015,51,0.022,52,0.015,58,1.993,60,2.335,64,2.869,99,1.713,114,3.635,116,3.376,117,1.692,118,1.692,119,1.484,121,3.178,286,2.863,292,3.372,295,1.914,296,1.97,297,3.372,298,3.372,299,3.372,300,3.372,301,3.372,302,3.372,303,2.393,304,2.393,305,2.393,306,3.702,307,3.478,308,2.393,309,2.393,310,2.393,311,2.393,312,2.393,313,3.478,314,4.096,315,2.393]],["title/classes/UserEntity.html",[0,0.019,316,1.467]],["body/classes/UserEntity.html",[0,0.016,2,0.911,3,0.284,4,0.24,5,0.24,10,0.284,17,1.003,20,0.038,21,1.008,22,1.123,26,0.33,32,0.284,50,0.016,51,0.023,52,0.016,58,2.088,60,2.367,99,1.779,125,2.078,126,4.686,129,2.078,130,3.472,134,2.972,135,2.075,136,1.117,297,3.791,298,3.472,299,3.472,300,3.791,301,3.791,302,3.472,306,3.791,316,1.779,317,2.075,318,2.52,319,2.52,320,2.52,321,2.52,322,2.52,323,2.52,324,2.52,325,2.075,326,2.52]],["title/controllers/UsersController.html",[53,1.319,327,1.846]],["body/controllers/UsersController.html",[0,0.013,3,0.232,4,0.196,5,0.196,10,0.232,11,1.017,17,0.802,19,1.848,20,0.039,21,1.5,22,0.807,23,1.848,25,1.365,26,0.587,29,0.549,32,0.232,43,1.671,50,0.013,51,0.02,52,0.013,53,0.913,55,1.015,58,1.671,63,1.456,64,1.015,125,2.059,129,2.413,136,0.913,142,1.696,143,4.46,144,1.929,145,1.929,146,2.59,147,1.929,149,3.087,151,3.126,152,1.277,153,2.562,156,1.277,157,2.562,159,2.562,160,1.696,161,1.696,162,1.696,163,1.696,164,1.696,165,1.277,166,1.277,172,1.696,173,3.44,175,1.696,177,1.696,179,1.696,295,3.016,316,1.015,325,1.696,327,1.929,328,1.696,329,1.696,330,2.06,331,2.06,332,2.06,333,2.06,334,1.848,335,1.696,336,1.456,337,1.696,338,2.06,339,2.06,340,2.06,341,2.06,342,2.06]],["title/modules/UsersModule.html",[66,1.319,78,1.639]],["body/modules/UsersModule.html",[0,0.02,3,0.355,4,0.3,5,0.3,20,0.038,26,0.691,29,0.84,32,0.355,50,0.02,51,0.027,52,0.02,55,2.077,66,2.105,68,1.554,69,1.554,70,1.955,71,1.955,72,1.554,73,2.944,74,2.613,78,2.993,79,2.613,80,1.955,81,1.955,83,2.229,86,2.98,87,1.554,184,2.596,187,3.471,316,1.554,327,2.944,334,2.679,335,2.596,336,2.229,343,2.596,344,2.596,345,3.153,346,3.153,347,3.153]],["title/injectables/UsersService.html",[91,1.319,334,1.467]],["body/injectables/UsersService.html",[0,0.014,3,0.256,4,0.216,5,0.216,10,0.256,11,1.094,17,0.898,19,2.161,20,0.039,21,1.754,22,0.943,23,2.161,25,1.433,26,0.612,29,0.605,32,0.256,43,1.754,50,0.015,51,0.022,52,0.015,87,1.119,91,1.483,92,1.408,125,1.649,129,2.492,136,1.006,144,2.075,145,2.075,146,2.718,147,2.075,151,3.218,152,2.075,156,2.075,165,1.408,166,1.408,189,1.87,191,3.1,198,1.87,200,1.87,295,3.044,316,1.119,329,2.755,334,1.649,336,1.605,337,1.87,348,1.87,349,2.271,350,2.271,351,3.347,352,2.271,353,2.271,354,2.271,355,2.271,356,2.271,357,2.271,358,2.271,359,2.271,360,2.271]],["title/coverage.html",[361,2.867]],["body/coverage.html",[0,0.033,1,1.586,5,0.244,6,2.107,7,2.107,20,0.038,22,0.55,50,0.017,51,0.024,52,0.017,53,1.885,54,1.809,56,2.107,61,1.586,72,1.261,84,2.009,91,1.885,93,2.107,97,1.409,98,2.107,109,1.409,123,1.261,124,2.107,140,1.586,141,2.107,167,1.261,188,2.107,205,2.58,206,1.586,212,1.409,242,1.809,244,2.009,246,2.107,250,2.107,255,1.809,256,2.107,283,2.107,295,1.409,296,2.107,316,1.261,317,2.107,327,1.586,328,2.107,334,1.261,348,2.107,361,1.809,362,2.559,363,2.559,364,2.559,365,5.874,366,4.637,367,4.254,368,4.254,369,3.649,370,2.559,371,2.559,372,3.649,373,2.559,374,3.649,375,2.107,376,2.559,377,2.559,378,2.559]],["title/dependencies.html",[69,1.763,379,2.49]],["body/dependencies.html",[0,0.028,20,0.039,29,0.918,31,2.838,50,0.022,51,0.029,52,0.022,69,1.698,87,1.698,113,2.838,119,2.137,136,1.528,222,2.437,264,2.838,265,2.838,380,5.25,381,3.447,382,3.447,383,3.447,384,3.447,385,3.447,386,3.447,387,3.447,388,3.447,389,3.447,390,3.447,391,3.447,392,3.447,393,3.447,394,3.447,395,3.447,396,3.447,397,3.447,398,3.447,399,3.447,400,3.447]],["title/miscellaneous/functions.html",[401,1.544,402,2.946]],["body/miscellaneous/functions.html",[10,0.499,20,0.034,50,0.029,51,0.034,52,0.029,72,2.737,375,3.651,401,2.749,402,3.651,403,4.435]],["title/index.html",[10,0.28,404,2.49,405,2.49]],["body/index.html",[4,0.268,20,0.038,50,0.018,51,0.025,52,0.018,100,1.984,191,1.984,208,1.74,209,1.984,210,2.753,217,1.984,262,2.311,361,1.984,406,2.807,407,2.807,408,3.895,409,2.807,410,2.807,411,2.807,412,2.807,413,2.807,414,2.807,415,2.807,416,2.807,417,2.807,418,4.473,419,2.807,420,2.807,421,2.807,422,5.386,423,2.807,424,5.252,425,2.807,426,2.807,427,3.895,428,2.807,429,2.807,430,2.807,431,3.895,432,2.807,433,2.807,434,2.807,435,3.895,436,3.895,437,2.807,438,2.807,439,2.807,440,2.807,441,2.807,442,2.311,443,2.807,444,2.807,445,2.807,446,2.807,447,2.807,448,2.807,449,2.807,450,2.807,451,2.807,452,2.807,453,2.807,454,2.807,455,2.807,456,2.807,457,2.807,458,2.807,459,2.807]],["title/modules.html",[68,1.998]],["body/modules.html",[20,0.033,50,0.027,51,0.033,52,0.027,67,2.61,68,2.074,77,2.318,78,2.318,442,4.474,460,5.435,461,5.435,462,5.435]],["title/overview.html",[463,3.339]],["body/overview.html",[2,1.227,20,0.036,50,0.022,51,0.029,52,0.022,55,1.672,66,1.504,67,3.441,68,1.672,69,1.672,70,2.104,71,2.104,72,1.672,73,2.104,74,2.104,75,2.795,76,2.795,77,2.98,78,2.98,79,2.744,80,2.104,81,2.104,92,2.104,167,2.427,181,2.795,182,2.795,245,2.399,334,2.427,343,2.795,344,2.795,463,2.795,464,4.925,465,3.394,466,3.394]],["title/miscellaneous/variables.html",[401,1.544,467,2.946]],["body/miscellaneous/variables.html",[10,0.48,20,0.037,50,0.028,51,0.033,52,0.028,84,2.81,205,3.014,208,2.644,242,3.014,243,3.511,401,2.644,467,3.511,468,4.265,469,4.265,470,4.265]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BookDto.html":{},"classes/BookEntity.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/Env.html":{},"interfaces/IConfigInterface.html":{},"interfaces/IEnvInterface.html":{},"classes/Middleware.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["0.12.1",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["0.2.24",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["1.7.4",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":235,"title":{},"body":{"classes/Env.html":{}}}],["2",{"_index":466,"title":{},"body":{"overview.html":{}}}],["3",{"_index":464,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["3.22.0",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["3.5.6",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":220,"title":{},"body":{"classes/Env.html":{}}}],["400",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["6.5.4",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":465,"title":{},"body":{"overview.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/Middleware.html":{},"coverage.html":{}}}],["amazing",{"_index":443,"title":{},"body":{"index.html":{}}}],["angular",{"_index":416,"title":{},"body":{"index.html":{}}}],["api",{"_index":281,"title":{},"body":{"classes/Middleware.html":{}}}],["app",{"_index":262,"title":{},"body":{"classes/Middleware.html":{},"index.html":{}}}],["app.enablecors",{"_index":282,"title":{},"body":{"classes/Middleware.html":{}}}],["app.service",{"_index":62,"title":{},"body":{"controllers/AppController.html":{}}}],["app.setglobalprefix('api",{"_index":269,"title":{},"body":{"classes/Middleware.html":{}}}],["app.use(compression",{"_index":272,"title":{},"body":{"classes/Middleware.html":{}}}],["app.use(helmet",{"_index":277,"title":{},"body":{"classes/Middleware.html":{}}}],["app.useglobalfilters(new",{"_index":271,"title":{},"body":{"classes/Middleware.html":{}}}],["app.useglobalpipes(new",{"_index":270,"title":{},"body":{"classes/Middleware.html":{}}}],["appcontroller",{"_index":54,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["applications",{"_index":413,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":67,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":61,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["argumentshost",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["async",{"_index":143,"title":{},"body":{"controllers/BooksController.html":{},"controllers/UsersController.html":{}}}],["author",{"_index":100,"title":{},"body":{"classes/BookDto.html":{},"classes/BookEntity.html":{},"index.html":{}}}],["autoreconnect",{"_index":230,"title":{},"body":{"classes/Env.html":{}}}],["await",{"_index":173,"title":{},"body":{"controllers/BooksController.html":{},"controllers/UsersController.html":{}}}],["backers",{"_index":444,"title":{},"body":{"index.html":{}}}],["blogpost",{"_index":101,"title":{},"body":{"classes/BookDto.html":{},"classes/BookEntity.html":{}}}],["body",{"_index":159,"title":{},"body":{"controllers/BooksController.html":{},"controllers/UsersController.html":{}}}],["bookdto",{"_index":97,"title":{"classes/BookDto.html":{}},"body":{"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"coverage.html":{}}}],["bookentity",{"_index":123,"title":{"classes/BookEntity.html":{}},"body":{"classes/BookEntity.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"coverage.html":{}}}],["books",{"_index":138,"title":{},"body":{"classes/BookEntity.html":{},"controllers/BooksController.html":{}}}],["books.controller",{"_index":185,"title":{},"body":{"modules/BooksModule.html":{}}}],["books.service",{"_index":168,"title":{},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{}}}],["books/books.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["bookscontroller",{"_index":140,"title":{"controllers/BooksController.html":{}},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"coverage.html":{}}}],["booksmodule",{"_index":77,"title":{"modules/BooksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["booksrepository",{"_index":193,"title":{},"body":{"injectables/BooksService.html":{}}}],["booksservice",{"_index":167,"title":{"injectables/BooksService.html":{}},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"coverage.html":{},"overview.html":{}}}],["boolean",{"_index":306,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["bootstrap",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":462,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":460,"title":{},"body":{"modules.html":{}}}],["building",{"_index":409,"title":{},"body":{"index.html":{}}}],["cache",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["cacheinterceptor",{"_index":162,"title":{},"body":{"controllers/BooksController.html":{},"controllers/UsersController.html":{}}}],["cachemodule",{"_index":184,"title":{},"body":{"modules/BooksModule.html":{},"modules/UsersModule.html":{}}}],["cachemodule.register",{"_index":187,"title":{},"body":{"modules/BooksModule.html":{},"modules/UsersModule.html":{}}}],["catch",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch(exception",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/BookDto.html":{},"classes/BookEntity.html":{},"classes/Env.html":{},"classes/Middleware.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BookDto.html":{},"classes/BookEntity.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/Env.html":{},"classes/Middleware.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BookDto.html":{},"classes/BookEntity.html":{},"classes/Env.html":{},"classes/Middleware.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_booksmodule",{"_index":181,"title":{},"body":{"modules/BooksModule.html":{},"overview.html":{}}}],["cluster_booksmodule_providers",{"_index":182,"title":{},"body":{"modules/BooksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":343,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":344,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":126,"title":{},"body":{"classes/BookEntity.html":{},"classes/UserEntity.html":{}}}],["compression",{"_index":265,"title":{},"body":{"classes/Middleware.html":{},"dependencies.html":{}}}],["config/env",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Env.html":{}}}],["constructor",{"_index":189,"title":{},"body":{"injectables/BooksService.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectrepository(bookentity",{"_index":199,"title":{},"body":{"injectables/BooksService.html":{}}}],["constructor(@injectrepository(userentity",{"_index":356,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(booksrepository",{"_index":190,"title":{},"body":{"injectables/BooksService.html":{}}}],["constructor(private",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"controllers/BooksController.html":{},"controllers/UsersController.html":{}}}],["constructor(usersrepository",{"_index":349,"title":{},"body":{"injectables/UsersService.html":{}}}],["controller",{"_index":53,"title":{"controllers/AppController.html":{},"controllers/BooksController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/BooksController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('books",{"_index":171,"title":{},"body":{"controllers/BooksController.html":{}}}],["controller('users",{"_index":338,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cors",{"_index":279,"title":{},"body":{"classes/Middleware.html":{}}}],["coverage",{"_index":361,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":144,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":175,"title":{},"body":{"controllers/BooksController.html":{},"controllers/UsersController.html":{}}}],["create(bookdto",{"_index":148,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["create(userdto",{"_index":329,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ctx",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["database",{"_index":236,"title":{},"body":{"classes/Env.html":{}}}],["databases",{"_index":221,"title":{},"body":{"classes/Env.html":{},"interfaces/IConfigInterface.html":{}}}],["declarations",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"classes/BookDto.html":{},"classes/BookEntity.html":{},"controllers/BooksController.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BookDto.html":{},"classes/BookEntity.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/Env.html":{},"interfaces/IEnvInterface.html":{},"classes/Middleware.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":164,"title":{},"body":{"controllers/BooksController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":153,"title":{},"body":{"controllers/BooksController.html":{},"controllers/UsersController.html":{}}}],["deletebyid",{"_index":145,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletebyid(@param('id",{"_index":179,"title":{},"body":{"controllers/BooksController.html":{},"controllers/UsersController.html":{}}}],["deletebyid(id",{"_index":152,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteresult",{"_index":165,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":69,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":417,"title":{},"body":{"index.html":{}}}],["development",{"_index":208,"title":{},"body":{"classes/Env.html":{},"interfaces/IEnvInterface.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dist/**/*.entity{.ts,.js",{"_index":240,"title":{},"body":{"classes/Env.html":{}}}],["documentation",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["dto/book.dto",{"_index":169,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["dto/published.dto",{"_index":137,"title":{},"body":{"classes/BookEntity.html":{}}}],["dto/user.dto",{"_index":337,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":432,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":410,"title":{},"body":{"index.html":{}}}],["email",{"_index":297,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["enables",{"_index":278,"title":{},"body":{"classes/Middleware.html":{}}}],["entities",{"_index":239,"title":{},"body":{"classes/Env.html":{}}}],["entities/book.entity",{"_index":170,"title":{},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{}}}],["entities/user.entity",{"_index":336,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":134,"title":{},"body":{"classes/BookEntity.html":{},"classes/UserEntity.html":{}}}],["env",{"_index":84,"title":{"classes/Env.html":{}},"body":{"modules/AppModule.html":{},"classes/Env.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env()[process.env.node_env",{"_index":243,"title":{},"body":{"classes/Env.html":{},"miscellaneous/variables.html":{}}}],["exception",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception['errmsg",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":9,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter",{"_index":268,"title":{},"body":{"classes/Middleware.html":{}}}],["exceptions.filter.ts",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exceptions.filter.ts:12",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions/filters/all",{"_index":267,"title":{},"body":{"classes/Middleware.html":{}}}],["export",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BookDto.html":{},"classes/BookEntity.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/Env.html":{},"interfaces/IConfigInterface.html":{},"interfaces/IEnvInterface.html":{},"classes/Middleware.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BookDto.html":{},"classes/BookEntity.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/Env.html":{},"interfaces/IConfigInterface.html":{},"interfaces/IEnvInterface.html":{},"classes/Middleware.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":146,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["firstname",{"_index":298,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["framework",{"_index":408,"title":{},"body":{"index.html":{}}}],["function",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":402,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gethello",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":404,"title":{"index.html":{}},"body":{}}],["globally",{"_index":276,"title":{},"body":{"classes/Middleware.html":{}}}],["grow",{"_index":439,"title":{},"body":{"index.html":{}}}],["headers",{"_index":275,"title":{},"body":{"classes/Middleware.html":{}}}],["heavily",{"_index":414,"title":{},"body":{"index.html":{}}}],["hello",{"_index":95,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":264,"title":{},"body":{"classes/Middleware.html":{},"dependencies.html":{}}}],["here",{"_index":450,"title":{},"body":{"index.html":{}}}],["host",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["https://nestjs.com",{"_index":456,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["iconfig.interface",{"_index":254,"title":{},"body":{"interfaces/IEnvInterface.html":{}}}],["iconfiginterface",{"_index":212,"title":{"interfaces/IConfigInterface.html":{}},"body":{"classes/Env.html":{},"interfaces/IConfigInterface.html":{},"interfaces/IEnvInterface.html":{},"coverage.html":{}}}],["id",{"_index":125,"title":{},"body":{"classes/BookEntity.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["ienvinterface",{"_index":206,"title":{"interfaces/IEnvInterface.html":{}},"body":{"classes/Env.html":{},"interfaces/IEnvInterface.html":{},"coverage.html":{}}}],["ilpdw.mongodb.net/test?retrywrites=true&w=majority",{"_index":226,"title":{},"body":{"classes/Env.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Env.html":{}}}],["import",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BookDto.html":{},"classes/BookEntity.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/Env.html":{},"interfaces/IEnvInterface.html":{},"classes/Middleware.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BookDto.html":{},"classes/BookEntity.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/Env.html":{},"interfaces/IConfigInterface.html":{},"interfaces/IEnvInterface.html":{},"classes/Middleware.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":260,"title":{},"body":{"classes/Middleware.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BookDto.html":{},"classes/BookEntity.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/Env.html":{},"interfaces/IConfigInterface.html":{},"interfaces/IEnvInterface.html":{},"classes/Middleware.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["init",{"_index":258,"title":{},"body":{"classes/Middleware.html":{}}}],["init(app",{"_index":259,"title":{},"body":{"classes/Middleware.html":{}}}],["injectable",{"_index":91,"title":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":92,"title":{},"body":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":198,"title":{},"body":{"injectables/BooksService.html":{},"injectables/UsersService.html":{}}}],["inspired",{"_index":415,"title":{},"body":{"index.html":{}}}],["installation",{"_index":421,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":423,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["interface",{"_index":244,"title":{"interfaces/IConfigInterface.html":{},"interfaces/IEnvInterface.html":{}},"body":{"interfaces/IConfigInterface.html":{},"interfaces/IEnvInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":245,"title":{},"body":{"interfaces/IConfigInterface.html":{},"interfaces/IEnvInterface.html":{},"overview.html":{}}}],["interfaces/iconfig.interface",{"_index":215,"title":{},"body":{"classes/Env.html":{}}}],["interfaces/ienv.interface",{"_index":216,"title":{},"body":{"classes/Env.html":{}}}],["isadmin",{"_index":299,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["isboolean",{"_index":314,"title":{},"body":{"classes/UserDto.html":{}}}],["isboolean()@isnotempty",{"_index":307,"title":{},"body":{"classes/UserDto.html":{}}}],["isemail",{"_index":313,"title":{},"body":{"classes/UserDto.html":{}}}],["isnotempty",{"_index":114,"title":{},"body":{"classes/BookDto.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{}}}],["isnumber",{"_index":115,"title":{},"body":{"classes/BookDto.html":{},"classes/PublishedDto.html":{}}}],["isnumber()@isnotempty",{"_index":107,"title":{},"body":{"classes/BookDto.html":{}}}],["isnumber()@isnotempty()@min(1900)@max(3000",{"_index":288,"title":{},"body":{"classes/PublishedDto.html":{}}}],["isstring",{"_index":116,"title":{},"body":{"classes/BookDto.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{}}}],["isstring()@isemail()@isnotempty()@minlength(1)@maxlength(26",{"_index":303,"title":{},"body":{"classes/UserDto.html":{}}}],["isstring()@isnotempty()@minlength(1)@maxlength(14",{"_index":310,"title":{},"body":{"classes/UserDto.html":{}}}],["isstring()@isnotempty()@minlength(1)@maxlength(24",{"_index":104,"title":{},"body":{"classes/BookDto.html":{}}}],["isstring()@isnotempty()@minlength(1)@maxlength(26",{"_index":286,"title":{},"body":{"classes/PublishedDto.html":{},"classes/UserDto.html":{}}}],["join",{"_index":446,"title":{},"body":{"index.html":{}}}],["json(exception['response",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["kamil",{"_index":453,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":300,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["legend",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["lesson9",{"_index":238,"title":{},"body":{"classes/Env.html":{}}}],["license",{"_index":459,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":436,"title":{},"body":{"index.html":{}}}],["literal",{"_index":247,"title":{},"body":{"interfaces/IConfigInterface.html":{}}}],["manager",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BookDto.html":{},"classes/BookEntity.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/Env.html":{},"interfaces/IConfigInterface.html":{},"interfaces/IEnvInterface.html":{},"classes/Middleware.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":291,"title":{},"body":{"classes/PublishedDto.html":{}}}],["max(3000",{"_index":294,"title":{},"body":{"classes/PublishedDto.html":{}}}],["maxlength",{"_index":118,"title":{},"body":{"classes/BookDto.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{}}}],["maxlength(14",{"_index":315,"title":{},"body":{"classes/UserDto.html":{}}}],["maxlength(24",{"_index":122,"title":{},"body":{"classes/BookDto.html":{}}}],["maxlength(26",{"_index":292,"title":{},"body":{"classes/PublishedDto.html":{},"classes/UserDto.html":{}}}],["message",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["metadata",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/Env.html":{},"interfaces/IEnvInterface.html":{},"classes/Middleware.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middleware",{"_index":255,"title":{"classes/Middleware.html":{}},"body":{"classes/Middleware.html":{},"coverage.html":{}}}],["min",{"_index":290,"title":{},"body":{"classes/PublishedDto.html":{}}}],["min(1900",{"_index":293,"title":{},"body":{"classes/PublishedDto.html":{}}}],["minlength",{"_index":117,"title":{},"body":{"classes/BookDto.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{}}}],["minlength(1",{"_index":121,"title":{},"body":{"classes/BookDto.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{}}}],["miscellaneous",{"_index":401,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":435,"title":{},"body":{"index.html":{}}}],["mode",{"_index":427,"title":{},"body":{"index.html":{}}}],["module",{"_index":66,"title":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":68,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":222,"title":{},"body":{"classes/Env.html":{},"interfaces/IConfigInterface.html":{},"dependencies.html":{}}}],["mongodb+srv://root:1234@cluster0",{"_index":225,"title":{},"body":{"classes/Env.html":{}}}],["more",{"_index":449,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":454,"title":{},"body":{"index.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BookEntity.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/Middleware.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":418,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":458,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/Middleware.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":242,"title":{},"body":{"classes/Env.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":407,"title":{},"body":{"index.html":{}}}],["npm",{"_index":422,"title":{},"body":{"index.html":{}}}],["number",{"_index":106,"title":{},"body":{"classes/BookDto.html":{},"classes/BookEntity.html":{},"classes/PublishedDto.html":{}}}],["number.max_value",{"_index":232,"title":{},"body":{"classes/Env.html":{}}}],["number|boolean|string",{"_index":248,"title":{},"body":{"interfaces/IConfigInterface.html":{}}}],["object",{"_index":249,"title":{},"body":{"interfaces/IConfigInterface.html":{}}}],["objectid",{"_index":129,"title":{},"body":{"classes/BookEntity.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["objectidcolumn",{"_index":130,"title":{},"body":{"classes/BookEntity.html":{},"classes/UserEntity.html":{}}}],["open",{"_index":437,"title":{},"body":{"index.html":{}}}],["optional",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/Middleware.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":463,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":379,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":160,"title":{},"body":{"controllers/BooksController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/Middleware.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["phone",{"_index":301,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["please",{"_index":447,"title":{},"body":{"index.html":{}}}],["port",{"_index":218,"title":{},"body":{"classes/Env.html":{},"interfaces/IConfigInterface.html":{}}}],["post",{"_index":149,"title":{},"body":{"controllers/BooksController.html":{},"controllers/UsersController.html":{}}}],["prefix",{"_index":142,"title":{},"body":{"controllers/BooksController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":200,"title":{},"body":{"injectables/BooksService.html":{},"injectables/UsersService.html":{}}}],["process.env.mongodb_database",{"_index":237,"title":{},"body":{"classes/Env.html":{}}}],["process.env.mongodb_reconnect_interval",{"_index":234,"title":{},"body":{"classes/Env.html":{}}}],["process.env.mongodb_url",{"_index":224,"title":{},"body":{"classes/Env.html":{}}}],["process.env.server_port",{"_index":219,"title":{},"body":{"classes/Env.html":{}}}],["production",{"_index":209,"title":{},"body":{"classes/Env.html":{},"interfaces/IEnvInterface.html":{},"index.html":{}}}],["progressive",{"_index":406,"title":{},"body":{"index.html":{}}}],["project",{"_index":438,"title":{},"body":{"index.html":{}}}],["promise",{"_index":151,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":99,"title":{},"body":{"classes/BookDto.html":{},"classes/BookEntity.html":{},"interfaces/IConfigInterface.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["providers",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":207,"title":{},"body":{"classes/Env.html":{}}}],["published",{"_index":102,"title":{},"body":{"classes/BookDto.html":{},"classes/BookEntity.html":{}}}],["published.dto",{"_index":120,"title":{},"body":{"classes/BookDto.html":{}}}],["publisheddto",{"_index":109,"title":{"classes/PublishedDto.html":{}},"body":{"classes/BookDto.html":{},"classes/BookEntity.html":{},"classes/PublishedDto.html":{},"coverage.html":{}}}],["publisher",{"_index":284,"title":{},"body":{"classes/PublishedDto.html":{}}}],["put",{"_index":163,"title":{},"body":{"controllers/BooksController.html":{},"controllers/UsersController.html":{}}}],["put(':id",{"_index":157,"title":{},"body":{"controllers/BooksController.html":{},"controllers/UsersController.html":{}}}],["read",{"_index":448,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["reconnectinterval",{"_index":233,"title":{},"body":{"classes/Env.html":{}}}],["reconnecttries",{"_index":231,"title":{},"body":{"classes/Env.html":{}}}],["reflect",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":191,"title":{},"body":{"injectables/BooksService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["requests",{"_index":280,"title":{},"body":{"classes/Middleware.html":{}}}],["res",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["res.status(500).json",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["reset",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["result",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BookDto.html":{},"classes/BookEntity.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/Env.html":{},"interfaces/IConfigInterface.html":{},"interfaces/IEnvInterface.html":{},"classes/Middleware.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BookDto.html":{},"classes/BookEntity.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/Env.html":{},"interfaces/IConfigInterface.html":{},"interfaces/IEnvInterface.html":{},"classes/Middleware.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/Env.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/Env.html":{},"interfaces/IEnvInterface.html":{},"classes/Middleware.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":424,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":411,"title":{},"body":{"index.html":{}}}],["secure",{"_index":274,"title":{},"body":{"classes/Middleware.html":{}}}],["server",{"_index":217,"title":{},"body":{"classes/Env.html":{},"interfaces/IConfigInterface.html":{},"index.html":{}}}],["sets",{"_index":273,"title":{},"body":{"classes/Middleware.html":{}}}],["side",{"_index":412,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BookDto.html":{},"classes/BookEntity.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/Env.html":{},"interfaces/IConfigInterface.html":{},"interfaces/IEnvInterface.html":{},"classes/Middleware.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":441,"title":{},"body":{"index.html":{}}}],["src/.../index.ts",{"_index":468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/components/app/app.controller.ts",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/components/app/app.controller.ts:9",{"_index":59,"title":{},"body":{"controllers/AppController.html":{}}}],["src/components/app/app.module.ts",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["src/components/app/app.service.ts",{"_index":93,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/components/app/app.service.ts:5",{"_index":94,"title":{},"body":{"injectables/AppService.html":{}}}],["src/components/books/books.controller.ts",{"_index":141,"title":{},"body":{"controllers/BooksController.html":{},"coverage.html":{}}}],["src/components/books/books.controller.ts:27",{"_index":155,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/components/books/books.controller.ts:32",{"_index":150,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/components/books/books.controller.ts:37",{"_index":158,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/components/books/books.controller.ts:42",{"_index":154,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/components/books/books.module.ts",{"_index":183,"title":{},"body":{"modules/BooksModule.html":{}}}],["src/components/books/books.service.ts",{"_index":188,"title":{},"body":{"injectables/BooksService.html":{},"coverage.html":{}}}],["src/components/books/books.service.ts:13",{"_index":192,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/components/books/books.service.ts:16",{"_index":196,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/components/books/books.service.ts:20",{"_index":194,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/components/books/books.service.ts:24",{"_index":197,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/components/books/books.service.ts:28",{"_index":195,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/components/books/dto/book.dto.ts",{"_index":98,"title":{},"body":{"classes/BookDto.html":{},"coverage.html":{}}}],["src/components/books/dto/book.dto.ts:14",{"_index":108,"title":{},"body":{"classes/BookDto.html":{}}}],["src/components/books/dto/book.dto.ts:20",{"_index":112,"title":{},"body":{"classes/BookDto.html":{}}}],["src/components/books/dto/book.dto.ts:26",{"_index":105,"title":{},"body":{"classes/BookDto.html":{}}}],["src/components/books/dto/book.dto.ts:29",{"_index":111,"title":{},"body":{"classes/BookDto.html":{}}}],["src/components/books/dto/published.dto.ts",{"_index":283,"title":{},"body":{"classes/PublishedDto.html":{},"coverage.html":{}}}],["src/components/books/dto/published.dto.ts:15",{"_index":287,"title":{},"body":{"classes/PublishedDto.html":{}}}],["src/components/books/dto/published.dto.ts:21",{"_index":289,"title":{},"body":{"classes/PublishedDto.html":{}}}],["src/components/books/entities/book.entity.ts",{"_index":124,"title":{},"body":{"classes/BookEntity.html":{},"coverage.html":{}}}],["src/components/books/entities/book.entity.ts:14",{"_index":131,"title":{},"body":{"classes/BookEntity.html":{}}}],["src/components/books/entities/book.entity.ts:17",{"_index":128,"title":{},"body":{"classes/BookEntity.html":{}}}],["src/components/books/entities/book.entity.ts:20",{"_index":133,"title":{},"body":{"classes/BookEntity.html":{}}}],["src/components/books/entities/book.entity.ts:23",{"_index":127,"title":{},"body":{"classes/BookEntity.html":{}}}],["src/components/books/entities/book.entity.ts:26",{"_index":132,"title":{},"body":{"classes/BookEntity.html":{}}}],["src/components/users/dto/user.dto.ts",{"_index":296,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/components/users/dto/user.dto.ts:15",{"_index":305,"title":{},"body":{"classes/UserDto.html":{}}}],["src/components/users/dto/user.dto.ts:21",{"_index":309,"title":{},"body":{"classes/UserDto.html":{}}}],["src/components/users/dto/user.dto.ts:28",{"_index":304,"title":{},"body":{"classes/UserDto.html":{}}}],["src/components/users/dto/user.dto.ts:34",{"_index":311,"title":{},"body":{"classes/UserDto.html":{}}}],["src/components/users/dto/user.dto.ts:38",{"_index":308,"title":{},"body":{"classes/UserDto.html":{}}}],["src/components/users/dto/user.dto.ts:42",{"_index":312,"title":{},"body":{"classes/UserDto.html":{}}}],["src/components/users/entities/user.entity.ts",{"_index":317,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["src/components/users/entities/user.entity.ts:13",{"_index":320,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/components/users/entities/user.entity.ts:16",{"_index":319,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/components/users/entities/user.entity.ts:19",{"_index":322,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/components/users/entities/user.entity.ts:22",{"_index":318,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/components/users/entities/user.entity.ts:25",{"_index":323,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/components/users/entities/user.entity.ts:28",{"_index":321,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/components/users/entities/user.entity.ts:31",{"_index":324,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/components/users/users.controller.ts",{"_index":328,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/components/users/users.controller.ts:27",{"_index":332,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.controller.ts:32",{"_index":330,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.controller.ts:37",{"_index":333,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.controller.ts:42",{"_index":331,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.module.ts",{"_index":345,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/components/users/users.service.ts",{"_index":348,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/components/users/users.service.ts:13",{"_index":350,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/users.service.ts:17",{"_index":354,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/users.service.ts:21",{"_index":352,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/users.service.ts:25",{"_index":355,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/users.service.ts:29",{"_index":353,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/config/env/index.ts",{"_index":205,"title":{},"body":{"classes/Env.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/env/index.ts:27",{"_index":213,"title":{},"body":{"classes/Env.html":{}}}],["src/config/env/index.ts:49",{"_index":214,"title":{},"body":{"classes/Env.html":{}}}],["src/config/env/index.ts:5",{"_index":211,"title":{},"body":{"classes/Env.html":{}}}],["src/config/env/interfaces/iconfig.interface.ts",{"_index":246,"title":{},"body":{"interfaces/IConfigInterface.html":{},"coverage.html":{}}}],["src/config/env/interfaces/ienv.interface.ts",{"_index":250,"title":{},"body":{"interfaces/IEnvInterface.html":{},"coverage.html":{}}}],["src/config/env/interfaces/ienv.interface.ts:4",{"_index":251,"title":{},"body":{"interfaces/IEnvInterface.html":{}}}],["src/config/env/interfaces/ienv.interface.ts:6",{"_index":252,"title":{},"body":{"interfaces/IEnvInterface.html":{}}}],["src/config/env/interfaces/ienv.interface.ts:8",{"_index":253,"title":{},"body":{"interfaces/IEnvInterface.html":{}}}],["src/config/middleware.ts",{"_index":256,"title":{},"body":{"classes/Middleware.html":{},"coverage.html":{}}}],["src/config/middleware.ts:7",{"_index":261,"title":{},"body":{"classes/Middleware.html":{}}}],["src/exceptions/filters/all",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":375,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":425,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":428,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":429,"title":{},"body":{"index.html":{}}}],["started",{"_index":405,"title":{"index.html":{}},"body":{}}],["starter",{"_index":420,"title":{},"body":{"index.html":{}}}],["statements",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":257,"title":{},"body":{"classes/Middleware.html":{}}}],["status",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["status(status",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["statuscode",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["stay",{"_index":451,"title":{},"body":{"index.html":{}}}],["string",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BookDto.html":{},"classes/BookEntity.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["support",{"_index":442,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":461,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":241,"title":{},"body":{"classes/Env.html":{}}}],["table",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":210,"title":{},"body":{"classes/Env.html":{},"interfaces/IEnvInterface.html":{},"index.html":{}}}],["test:covsupport",{"_index":434,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":433,"title":{},"body":{"index.html":{}}}],["tests",{"_index":431,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":440,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["this.booksrepository.delete(id",{"_index":204,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.find",{"_index":201,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.save(bookdto",{"_index":202,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.update(id",{"_index":203,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksservice.create(bookdto",{"_index":176,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.deletebyid(id",{"_index":180,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.findall",{"_index":174,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.updatebyid(id",{"_index":178,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.usersrepository.delete(id",{"_index":360,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":357,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(userdto",{"_index":358,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.update(id",{"_index":359,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(userdto",{"_index":340,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deletebyid(id",{"_index":342,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":339,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updatebyid(id",{"_index":341,"title":{},"body":{"controllers/UsersController.html":{}}}],["title",{"_index":103,"title":{},"body":{"classes/BookDto.html":{},"classes/BookEntity.html":{}}}],["touch",{"_index":452,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":113,"title":{},"body":{"classes/BookDto.html":{},"dependencies.html":{}}}],["true",{"_index":228,"title":{},"body":{"classes/Env.html":{}}}],["twitter",{"_index":457,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BookDto.html":{},"classes/BookEntity.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/Env.html":{},"interfaces/IConfigInterface.html":{},"classes/Middleware.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["type(undefined",{"_index":110,"title":{},"body":{"classes/BookDto.html":{}}}],["typeorm",{"_index":136,"title":{},"body":{"classes/BookEntity.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([bookentity",{"_index":186,"title":{},"body":{"modules/BooksModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":347,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot(env.databases.mongodb",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":419,"title":{},"body":{"index.html":{}}}],["unique",{"_index":135,"title":{},"body":{"classes/BookEntity.html":{},"classes/UserEntity.html":{}}}],["unique(['blogpost",{"_index":139,"title":{},"body":{"classes/BookEntity.html":{}}}],["unique(['firstname",{"_index":326,"title":{},"body":{"classes/UserEntity.html":{}}}],["unit",{"_index":430,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["updatebyid",{"_index":147,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatebyid(@param('id",{"_index":177,"title":{},"body":{"controllers/BooksController.html":{},"controllers/UsersController.html":{}}}],["updatebyid(id",{"_index":156,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateresult",{"_index":166,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["url",{"_index":223,"title":{},"body":{"classes/Env.html":{}}}],["useinterceptors",{"_index":161,"title":{},"body":{"controllers/BooksController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":172,"title":{},"body":{"controllers/BooksController.html":{},"controllers/UsersController.html":{}}}],["usenewurlparser",{"_index":229,"title":{},"body":{"classes/Env.html":{}}}],["userdto",{"_index":295,"title":{"classes/UserDto.html":{}},"body":{"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userentity",{"_index":316,"title":{"classes/UserEntity.html":{}},"body":{"classes/UserEntity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users",{"_index":325,"title":{},"body":{"classes/UserEntity.html":{},"controllers/UsersController.html":{}}}],["users.controller",{"_index":346,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":335,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":327,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":78,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":351,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":334,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":227,"title":{},"body":{"classes/Env.html":{}}}],["validationpipe",{"_index":266,"title":{},"body":{"classes/Middleware.html":{}}}],["validator",{"_index":119,"title":{},"body":{"classes/BookDto.html":{},"classes/PublishedDto.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["value",{"_index":470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":467,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verified",{"_index":302,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["void",{"_index":263,"title":{},"body":{"classes/Middleware.html":{}}}],["watch",{"_index":426,"title":{},"body":{"index.html":{}}}],["website",{"_index":455,"title":{},"body":{"index.html":{}}}],["world",{"_index":96,"title":{},"body":{"injectables/AppService.html":{}}}],["year",{"_index":285,"title":{},"body":{"classes/PublishedDto.html":{}}}],["you'd",{"_index":445,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/filters/all-exceptions.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: unknown, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/exceptions/filters/all-exceptions.filter.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ExceptionFilter,\n    Catch,\n    ArgumentsHost,\n    HttpException,\n    HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n    catch(exception: unknown, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const res = ctx.getResponse();\n\n        const status =\n            exception instanceof HttpException\n                ? exception.getStatus()\n                : HttpStatus.INTERNAL_SERVER_ERROR;\n\n        if (status == 400) {\n            return res\n                .status(status)\n                .json(exception['response'])\n        }\n\n        return res.status(500).json({\n            statusCode: status,\n            message: exception['errmsg'],\n        });\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/app/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/components/app/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nBooksModule\n\nBooksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBooksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BooksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { env } from '../../config/env';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { BooksModule } from '../books/books.module';\nimport {UsersModule} from '../users/users.module';\n\n@Module({\n  imports: [\n    BooksModule,\n    UsersModule,\n    TypeOrmModule.forRoot(env.databases.mongodb),\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/app/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/components/app/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookDto.html":{"url":"classes/BookDto.html","title":"class - BookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/books/dto/book.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                author\n                            \n                            \n                                    Readonly\n                                blogpost\n                            \n                            \n                                    Readonly\n                                published\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@MinLength(1)@MaxLength(24)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/books/dto/book.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            blogpost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/books/dto/book.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            published\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PublishedDto[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/books/dto/book.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@MinLength(1)@MaxLength(24)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/books/dto/book.dto.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n    IsNotEmpty,\n    IsNumber,\n    IsString,\n    MinLength,\n    MaxLength,\n} from 'class-validator';\nimport { PublishedDto } from './published.dto';\n\nexport class BookDto {\n    @IsNumber()\n    @IsNotEmpty()\n    readonly blogpost: number;\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(1)\n    @MaxLength(24)\n    readonly title: string;\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(1)\n    @MaxLength(24)\n    readonly author: string;\n\n    @Type(() => PublishedDto)\n    readonly published: PublishedDto[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookEntity.html":{"url":"classes/BookEntity.html","title":"class - BookEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/books/entities/book.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                blogpost\n                            \n                            \n                                id\n                            \n                            \n                                published\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/books/entities/book.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blogpost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/books/entities/book.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectID\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ObjectIdColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/books/entities/book.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            published\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PublishedDto[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/books/entities/book.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/books/entities/book.entity.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Entity,\n    Column,\n    Unique,\n    ObjectIdColumn,\n    ObjectID\n} from 'typeorm';\nimport {PublishedDto} from '../dto/published.dto';\n\n@Entity({ name: 'books' })\n@Unique(['blogpost', 'title'])\nexport class BookEntity {\n    @ObjectIdColumn()\n    id: ObjectID;\n\n    @Column()\n    blogpost: number;\n\n    @Column()\n    title: string;\n\n    @Column()\n    author: string;\n\n    @Column()\n    published: PublishedDto[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BooksController.html":{"url":"controllers/BooksController.html","title":"controller - BooksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BooksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/books/books.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                books\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(bookDto: BookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/components/books/books.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookDto\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteById(id: ObjectID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/components/books/books.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/components/books/books.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateById(id: ObjectID, bookDto: BookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/components/books/books.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookDto\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Controller,\n    Body,\n    Param,\n    UseInterceptors,\n    CacheInterceptor,\n    Post,\n    Get,\n    Put,\n    Delete,\n} from '@nestjs/common';\nimport {\n    DeleteResult,\n    ObjectID,\n    UpdateResult\n} from 'typeorm';\nimport { BooksService } from './books.service';\nimport {BookDto} from './dto/book.dto';\nimport {BookEntity} from './entities/book.entity';\n\n@Controller('books')\n@UseInterceptors(CacheInterceptor)\nexport class BooksController {\n    constructor(private readonly booksService: BooksService) {}\n\n    @Get()\n    async findAll(): Promise {\n        return await this.booksService.findAll();\n    }\n\n    @Post()\n    async create(@Body() bookDto: BookDto): Promise {\n        return await this.booksService.create(bookDto);\n    }\n\n    @Put(':id')\n    async updateById(@Param('id') id: ObjectID, @Body() bookDto: BookDto): Promise {\n        return await this.booksService.updateById(id, bookDto);\n    }\n\n    @Delete(':id')\n    async deleteById(@Param('id') id: ObjectID): Promise {\n        return await this.booksService.deleteById(id);\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BooksModule.html":{"url":"modules/BooksModule.html","title":"module - BooksModule","body":"\n                   \n\n\n\n\n    Modules\n    BooksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BooksModule\n\n\n\ncluster_BooksModule_providers\n\n\n\n\nBooksService\n\nBooksService\n\n\n\nBooksModule\n\nBooksModule\n\nBooksModule -->\n\nBooksService->BooksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/books/books.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BooksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BooksController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, CacheModule } from '@nestjs/common';\nimport { BooksController } from './books.controller';\nimport { BooksService } from './books.service';\nimport {TypeOrmModule} from '@nestjs/typeorm';\nimport {BookEntity} from './entities/book.entity';\n\n@Module({\n  imports: [\n      TypeOrmModule.forFeature([BookEntity]),\n      CacheModule.register(),\n  ],\n  controllers: [BooksController],\n  providers: [BooksService],\n  exports: [\n      TypeOrmModule,\n      CacheModule.register(),\n  ],\n})\nexport class BooksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BooksService.html":{"url":"injectables/BooksService.html","title":"injectable - BooksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BooksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/books/books.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                deleteById\n                            \n                            \n                                findAll\n                            \n                            \n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(booksRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/components/books/books.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        booksRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(bookDto: BookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/books/books.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookDto\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteById(id: ObjectID)\n                \n            \n\n\n            \n                \n                    Defined in src/components/books/books.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/components/books/books.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateById\n                        \n                        \n                    \n                \n            \n            \n                \nupdateById(id: ObjectID, bookDto: BookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/books/books.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookDto\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@nestjs/common';\nimport {InjectRepository} from '@nestjs/typeorm';\nimport {BookDto} from './dto/book.dto';\nimport {BookEntity} from './entities/book.entity';\nimport {\n    DeleteResult,\n    ObjectID,\n    Repository,\n    UpdateResult\n} from 'typeorm';\n\n@Injectable()\nexport class BooksService {\n    constructor(@InjectRepository(BookEntity) private booksRepository: Repository) {}\n\n    findAll(): Promise {\n        return this.booksRepository.find();\n    }\n\n    create(bookDto: BookDto): Promise {\n        return this.booksRepository.save(bookDto);\n    }\n\n    updateById(id: ObjectID, bookDto: BookDto): Promise {\n        return this.booksRepository.update(id, bookDto);\n    }\n\n    deleteById(id: ObjectID): Promise {\n        return this.booksRepository.delete(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Env.html":{"url":"classes/Env.html","title":"class - Env","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Env\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/env/index.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IEnvInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                development\n                            \n                            \n                                    Public\n                                production\n                            \n                            \n                                    Public\n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            development\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    development()\n                \n            \n\n\n            \n                \n                    Defined in src/config/env/index.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IConfigInterface\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            production\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    production()\n                \n            \n\n\n            \n                \n                    Defined in src/config/env/index.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IConfigInterface\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            test\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    test()\n                \n            \n\n\n            \n                \n                    Defined in src/config/env/index.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IConfigInterface\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IConfigInterface } from './interfaces/IConfig.interface';\nimport { IEnvInterface } from './interfaces/IEnv.interface';\n\nclass Env implements IEnvInterface {\n    public development(): IConfigInterface {\n        return {\n            server: {\n                port: process.env.SERVER_PORT || 3000,\n            },\n            databases: {\n                mongodb: {\n                    type: 'mongodb',\n                    url: process.env.MONGODB_URL || 'mongodb+srv://root:1234@cluster0-ilpdw.mongodb.net/test?retryWrites=true&w=majority',\n                    useUnifiedTopology: true,\n                    useNewUrlParser: true,\n                    autoReconnect: true,\n                    reconnectTries: Number.MAX_VALUE,\n                    reconnectInterval: process.env.MONGODB_RECONNECT_INTERVAL || 1000,\n                    database: process.env.MONGODB_DATABASE || 'lesson9',\n                    entities: ['dist/**/*.entity{.ts,.js}'],\n                    synchronize: true,\n                }\n            }\n        }\n    }\n\n    public production(): IConfigInterface {\n        return {\n            server: {\n                port: process.env.SERVER_PORT || 3000,\n            },\n            databases: {\n                mongodb: {\n                    type: 'mongodb',\n                    url: process.env.MONGODB_URL || 'mongodb+srv://root:1234@cluster0-ilpdw.mongodb.net/test?retryWrites=true&w=majority',\n                    useUnifiedTopology: true,\n                    useNewUrlParser: true,\n                    autoReconnect: true,\n                    reconnectTries: Number.MAX_VALUE,\n                    reconnectInterval: process.env.MONGODB_RECONNECT_INTERVAL || 1000,\n                    database: process.env.MONGODB_DATABASE || 'lesson9',\n                    entities: [],\n                    synchronize: true,\n                }\n            }\n        }\n    }\n\n    public test(): IConfigInterface {\n        return {\n            server: {\n                port: process.env.SERVER_PORT || 3000,\n            },\n            databases: {\n                mongodb: {\n                    type: 'mongodb',\n                    url: process.env.MONGODB_URL || 'mongodb+srv://root:1234@cluster0-ilpdw.mongodb.net/test?retryWrites=true&w=majority',\n                    useUnifiedTopology: true,\n                    useNewUrlParser: true,\n                    autoReconnect: true,\n                    reconnectTries: Number.MAX_VALUE,\n                    reconnectInterval: process.env.MONGODB_RECONNECT_INTERVAL || 1000,\n                    database: process.env.MONGODB_DATABASE || 'lesson9',\n                    entities: [],\n                    synchronize: true,\n                }\n            }\n        }\n    }\n}\n\nexport const env = new Env()[process.env.NODE_ENV || 'development']();\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConfigInterface.html":{"url":"interfaces/IConfigInterface.html","title":"interface - IConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/env/interfaces/IConfig.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        databases\n                                \n                                \n                                        server\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        databases\n                                    \n                                \n                                \n                                    \n                                        databases:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        server\n                                    \n                                \n                                \n                                    \n                                        server:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IConfigInterface {\n    server: {\n        port: number|boolean|string;\n    },\n    databases: {\n        mongodb: object;\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEnvInterface.html":{"url":"interfaces/IEnvInterface.html","title":"interface - IEnvInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IEnvInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/env/interfaces/IEnv.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    development\n                                \n                                \n                                    production\n                                \n                                \n                                    test\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            development\n                        \n                        \n                    \n                \n            \n            \n                \ndevelopment()\n                \n            \n\n\n            \n                \n                    Defined in src/config/env/interfaces/IEnv.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IConfigInterface\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            production\n                        \n                        \n                    \n                \n            \n            \n                \nproduction()\n                \n            \n\n\n            \n                \n                    Defined in src/config/env/interfaces/IEnv.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IConfigInterface\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            test\n                        \n                        \n                    \n                \n            \n            \n                \ntest()\n                \n            \n\n\n            \n                \n                    Defined in src/config/env/interfaces/IEnv.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IConfigInterface\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {IConfigInterface} from './IConfig.interface';\n\nexport interface IEnvInterface {\n    development(): IConfigInterface;\n\n    production(): IConfigInterface;\n\n    test(): IConfigInterface;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Middleware.html":{"url":"classes/Middleware.html","title":"class - Middleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Middleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/config/middleware.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as helmet from 'helmet';\nimport * as compression from 'compression';\nimport {INestApplication, ValidationPipe} from '@nestjs/common';\nimport { AllExceptionsFilter } from '../exceptions/filters/all-exceptions.filter';\n\nexport class Middleware {\n    static init(app: INestApplication) {\n        app.setGlobalPrefix('api');\n        app.useGlobalPipes(new ValidationPipe());\n        app.useGlobalFilters(new AllExceptionsFilter());\n\n        app.use(compression());\n        // sets secure headers globally\n        app.use(helmet());\n        // enables cors requests to our api\n        app.enableCors();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PublishedDto.html":{"url":"classes/PublishedDto.html","title":"class - PublishedDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PublishedDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/books/dto/published.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                publisher\n                            \n                            \n                                    Readonly\n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@MinLength(1)@MaxLength(26)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/books/dto/published.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()@Min(1900)@Max(3000)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/books/dto/published.dto.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    IsString,\n    IsNumber,\n    Min,\n    Max,\n    MinLength,\n    MaxLength, IsNotEmpty,\n} from 'class-validator';\n\nexport class PublishedDto {\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(1)\n    @MaxLength(26)\n    readonly publisher: string;\n\n    @IsNumber()\n    @IsNotEmpty()\n    @Min(1900)\n    @Max(3000)\n    readonly year: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                isAdmin\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                phone\n                            \n                            \n                                    Readonly\n                                verified\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsEmail()@IsNotEmpty()@MinLength(1)@MaxLength(26)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users/dto/user.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@MinLength(1)@MaxLength(26)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users/dto/user.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isAdmin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users/dto/user.dto.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@MinLength(1)@MaxLength(26)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users/dto/user.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@MinLength(1)@MaxLength(14)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users/dto/user.dto.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            verified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users/dto/user.dto.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    IsString,\n    IsEmail,\n    MinLength,\n    MaxLength,\n    IsBoolean,\n    IsNotEmpty\n} from 'class-validator';\n\nexport class UserDto {\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(1)\n    @MaxLength(26)\n    readonly firstName: string;\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(1)\n    @MaxLength(26)\n    readonly lastName: string;\n\n    @IsString()\n    @IsEmail()\n    @IsNotEmpty()\n    @MinLength(1)\n    @MaxLength(26)\n    readonly email: string;\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(1)\n    @MaxLength(14)\n    readonly phone: string;\n\n    @IsBoolean()\n    @IsNotEmpty()\n    readonly isAdmin: boolean;\n\n    @IsBoolean()\n    @IsNotEmpty()\n    readonly verified: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/entities/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                isAdmin\n                            \n                            \n                                lastName\n                            \n                            \n                                phone\n                            \n                            \n                                verified\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users/entities/user.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users/entities/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectID\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ObjectIdColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users/entities/user.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdmin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users/entities/user.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users/entities/user.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users/entities/user.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/users/entities/user.entity.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Entity,\n    Column,\n    Unique,\n    ObjectIdColumn,\n    ObjectID\n} from 'typeorm';\n\n@Entity({ name: 'users' })\n@Unique(['firstName', 'lastName', 'email', 'phone'])\nexport class UserEntity {\n    @ObjectIdColumn()\n    id: ObjectID;\n\n    @Column()\n    firstName: string;\n\n    @Column()\n    lastName: string;\n\n    @Column()\n    email: string;\n\n    @Column()\n    phone: string;\n\n    @Column()\n    isAdmin: boolean;\n\n    @Column()\n    verified: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userDto: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteById(id: ObjectID)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateById(id: ObjectID, userDto: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    CacheInterceptor,\n    Controller,\n    Param,\n    Delete,\n    Get,\n    Post,\n    Put,\n    UseInterceptors\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UserEntity } from './entities/user.entity';\nimport { UserDto } from './dto/user.dto';\nimport {\n    DeleteResult,\n    ObjectID,\n    UpdateResult\n} from 'typeorm';\n\n@Controller('users')\n@UseInterceptors(CacheInterceptor)\nexport class UsersController {\n    constructor(private readonly usersService: UsersService) {}\n\n    @Get()\n    async findAll(): Promise {\n        return await this.usersService.findAll();\n    }\n\n    @Post()\n    async create(@Body() userDto: UserDto): Promise {\n        return await this.usersService.create(userDto);\n    }\n\n    @Put(':id')\n    async updateById(@Param('id') id: ObjectID, @Body() userDto: UserDto): Promise {\n        return await this.usersService.updateById(id, userDto);\n    }\n\n    @Delete(':id')\n    async deleteById(@Param('id') id: ObjectID): Promise {\n        return await this.usersService.deleteById(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CacheModule, Module} from '@nestjs/common';\nimport {UsersController} from './users.controller';\nimport { UsersService } from './users.service';\nimport {TypeOrmModule} from \"@nestjs/typeorm\";\nimport {UserEntity} from './entities/user.entity';\n\n@Module({\n    imports: [\n        TypeOrmModule.forFeature([UserEntity]),\n        CacheModule.register(),\n    ],\n    controllers: [UsersController],\n    providers: [UsersService],\n    exports: [\n        TypeOrmModule,\n        CacheModule.register(),\n    ]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                deleteById\n                            \n                            \n                                findAll\n                            \n                            \n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/components/users/users.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(userDto: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteById(id: ObjectID)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/users.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateById\n                        \n                        \n                    \n                \n            \n            \n                \nupdateById(id: ObjectID, userDto: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/users.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport {\n    DeleteResult,\n    ObjectID,\n    Repository,\n    UpdateResult\n} from 'typeorm';\nimport { UserDto } from './dto/user.dto';\nimport { UserEntity } from './entities/user.entity';\n\n@Injectable()\nexport class UsersService {\n    constructor(@InjectRepository(UserEntity) private usersRepository: Repository) {\n    }\n\n    findAll(): Promise {\n        return this.usersRepository.find();\n    }\n\n    create(userDto: UserDto): Promise {\n        return this.usersRepository.save(userDto);\n    }\n\n    updateById(id: ObjectID, userDto: UserDto): Promise {\n        return this.usersRepository.update(id, userDto);\n    }\n\n    deleteById(id: ObjectID): Promise {\n        return this.usersRepository.delete(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/components/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/components/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/components/books/books.controller.ts\n            \n            controller\n            BooksController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/books/books.service.ts\n            \n            injectable\n            BooksService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/components/books/dto/book.dto.ts\n            \n            class\n            BookDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/books/dto/published.dto.ts\n            \n            class\n            PublishedDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/books/entities/book.entity.ts\n            \n            class\n            BookEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/components/users/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/components/users/entities/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/components/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/config/env/index.ts\n            \n            class\n            Env\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/env/index.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/env/interfaces/IConfig.interface.ts\n            \n            interface\n            IConfigInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/env/interfaces/IEnv.interface.ts\n            \n            interface\n            IEnvInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/middleware.ts\n            \n            class\n            Middleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/filters/all-exceptions.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : 7.0.0\n        \n            @nestjs/config : 0.4.0\n        \n            @nestjs/core : 7.0.0\n        \n            @nestjs/platform-express : 7.0.0\n        \n            @nestjs/typeorm : 7.0.0\n        \n            cache-manager : 3.2.1\n        \n            class-transformer : 0.2.3\n        \n            class-validator : 0.12.1\n        \n            compression : 1.7.4\n        \n            helmet : 3.22.0\n        \n            mongodb : 3.5.6\n        \n            reflect-metadata : 0.1.13\n        \n            rimraf : 3.0.2\n        \n            rxjs : 6.5.4\n        \n            typeorm : 0.2.24\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BooksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_BooksModule\n\n\n\ncluster_BooksModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nBooksModule\n\nBooksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBooksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nBooksService\n\nBooksService\n\nBooksModule -->\n\nBooksService->BooksModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            env   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/env/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            env\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Env()[process.env.NODE_ENV || 'development']()\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
